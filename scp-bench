#!/usr/bin/env bash
set -euo pipefail

usage="$(basename "$0") [-h] [--help] <target> [size] -- benchmark scp speed to a specific target host

DESCRIPTION:
    -h          Show this help message
    --help      Same as -h

PRIMARIES:
    root        Directory root for search
    string      The search term
"
usage() {
    echo "$usage"
    exit 1
}

for option in "$@"
do
    case $option in
        -h|--help) usage;;
        -*|--*|\?) printf "illegal option: %s\n\n" "$option" >&2; usage;;
    esac
done

if [ $# -eq 2 ]; then
    ssh_server="$1"
    test_size=`dehumanise $2`
elif [ $# -eq 1 ]; then
    ssh_server="$1"
    test_size=`dehumanise 10m`
else
    usage
fi

test_file="/tmp/$(basename "$0").`echo date $$ | md5`"

cleanup() {
    echo "Cleaning up ..."
    echo "  Removing test file locally ..."
    `rm $test_file`
    echo "  Removing test file on $ssh_server ..."
    `ssh $ssh_server "rm $test_file"`
}

trap cleanup SIGINT

##


# print information about test
echo "Starting scp benchmarking using ..."
echo "  Server: $ssh_server"
echo "  File: $test_file"
echo "  Size: `humanise $test_size` ..."

# generate random file
echo "Generating test file ..."
`dd if=/dev/urandom of=$test_file bs=$(echo "$test_size" | bc) count=1 &> /dev/null`

# upload test
echo "Testing upload ..."
up_speed=`scp -v $test_file $ssh_server:$test_file 2>&1 | \
  grep "Bytes per second" | \
  sed "s/^[^0-9]*\([0-9.]*\)[^0-9]*\([0-9.]*\).*$/\1/g"`
up_speed=`echo "($up_speed*0.0009765625*100.0+0.5)/1*0.01" | bc`
echo "Upload speed:     $up_speed kB/s"
#cat $test_file | pv -s$test_size | ssh $ssh_server "cat > $test_file"
#cat $test_file | ssh $ssh_server "cat > $test_file"

# download test
echo "Testing download ..."
down_speed=`scp -v $ssh_server:$test_file $test_file 2>&1 | \
  grep "Bytes per second" | \
  sed "s/^[^0-9]*\([0-9.]*\)[^0-9]*\([0-9.]*\).*$/\2/g"`
down_speed=`echo "($down_speed*0.0009765625*100.0+0.5)/1*0.01" | bc`
echo "Download speed:   $down_speed kB/s"
#ssh $ssh_server "cat $test_file" | pv -s$test_size > /dev/null
#ssh $ssh_server "cat $test_file" > /dev/null
#ssh $ssh_server "dd if=/dev/urandom bs=10000 count=1"|dd of=/tmp/foobar

# clean up
cleanup

echo "done."

exit $?
